// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.0
// source: plc_ide/plc_ide.proto

package plcide

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LogSubscription_LogLevel int32

const (
	LogSubscription_DEBUG    LogSubscription_LogLevel = 0
	LogSubscription_INFO     LogSubscription_LogLevel = 1
	LogSubscription_WARNING  LogSubscription_LogLevel = 2
	LogSubscription_ERROR    LogSubscription_LogLevel = 3
	LogSubscription_CRITICAL LogSubscription_LogLevel = 4
)

// Enum value maps for LogSubscription_LogLevel.
var (
	LogSubscription_LogLevel_name = map[int32]string{
		0: "DEBUG",
		1: "INFO",
		2: "WARNING",
		3: "ERROR",
		4: "CRITICAL",
	}
	LogSubscription_LogLevel_value = map[string]int32{
		"DEBUG":    0,
		"INFO":     1,
		"WARNING":  2,
		"ERROR":    3,
		"CRITICAL": 4,
	}
)

func (x LogSubscription_LogLevel) Enum() *LogSubscription_LogLevel {
	p := new(LogSubscription_LogLevel)
	*p = x
	return p
}

func (x LogSubscription_LogLevel) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LogSubscription_LogLevel) Descriptor() protoreflect.EnumDescriptor {
	return file_plc_ide_plc_ide_proto_enumTypes[0].Descriptor()
}

func (LogSubscription_LogLevel) Type() protoreflect.EnumType {
	return &file_plc_ide_plc_ide_proto_enumTypes[0]
}

func (x LogSubscription_LogLevel) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LogSubscription_LogLevel.Descriptor instead.
func (LogSubscription_LogLevel) EnumDescriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{0, 0}
}

type ImportStatus_State int32

const (
	ImportStatus_RECEIVING  ImportStatus_State = 0
	ImportStatus_VALIDATING ImportStatus_State = 1
	ImportStatus_APPLIED    ImportStatus_State = 2
	ImportStatus_FAILED     ImportStatus_State = 3
)

// Enum value maps for ImportStatus_State.
var (
	ImportStatus_State_name = map[int32]string{
		0: "RECEIVING",
		1: "VALIDATING",
		2: "APPLIED",
		3: "FAILED",
	}
	ImportStatus_State_value = map[string]int32{
		"RECEIVING":  0,
		"VALIDATING": 1,
		"APPLIED":    2,
		"FAILED":     3,
	}
)

func (x ImportStatus_State) Enum() *ImportStatus_State {
	p := new(ImportStatus_State)
	*p = x
	return p
}

func (x ImportStatus_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImportStatus_State) Descriptor() protoreflect.EnumDescriptor {
	return file_plc_ide_plc_ide_proto_enumTypes[1].Descriptor()
}

func (ImportStatus_State) Type() protoreflect.EnumType {
	return &file_plc_ide_plc_ide_proto_enumTypes[1]
}

func (x ImportStatus_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImportStatus_State.Descriptor instead.
func (ImportStatus_State) EnumDescriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{5, 0}
}

// ------------------ 日志管理相关 ------------------
type LogSubscription struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	StartTime     *timestamppb.Timestamp   `protobuf:"bytes,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime       *timestamppb.Timestamp   `protobuf:"bytes,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	LevelFilter   LogSubscription_LogLevel `protobuf:"varint,3,opt,name=level_filter,json=levelFilter,proto3,enum=plcide.LogSubscription_LogLevel" json:"level_filter,omitempty"` // 日志级别过滤
	SourceFilter  string                   `protobuf:"bytes,4,opt,name=source_filter,json=sourceFilter,proto3" json:"source_filter,omitempty"`                                    // 来源模块过滤（如 "PLC.Runtime"）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogSubscription) Reset() {
	*x = LogSubscription{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogSubscription) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogSubscription) ProtoMessage() {}

func (x *LogSubscription) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogSubscription.ProtoReflect.Descriptor instead.
func (*LogSubscription) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{0}
}

func (x *LogSubscription) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *LogSubscription) GetEndTime() *timestamppb.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

func (x *LogSubscription) GetLevelFilter() LogSubscription_LogLevel {
	if x != nil {
		return x.LevelFilter
	}
	return LogSubscription_DEBUG
}

func (x *LogSubscription) GetSourceFilter() string {
	if x != nil {
		return x.SourceFilter
	}
	return ""
}

type LogEntry struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	Timestamp     *timestamppb.Timestamp   `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Level         LogSubscription_LogLevel `protobuf:"varint,2,opt,name=level,proto3,enum=plcide.LogSubscription_LogLevel" json:"level,omitempty"`
	Source        string                   `protobuf:"bytes,3,opt,name=source,proto3" json:"source,omitempty"`
	Message       string                   `protobuf:"bytes,4,opt,name=message,proto3" json:"message,omitempty"`
	Context       map[string]string        `protobuf:"bytes,5,rep,name=context,proto3" json:"context,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 扩展上下文（如设备ID、任务名）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{1}
}

func (x *LogEntry) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *LogEntry) GetLevel() LogSubscription_LogLevel {
	if x != nil {
		return x.Level
	}
	return LogSubscription_DEBUG
}

func (x *LogEntry) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *LogEntry) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *LogEntry) GetContext() map[string]string {
	if x != nil {
		return x.Context
	}
	return nil
}

type LogExportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Format        string                 `protobuf:"bytes,1,opt,name=format,proto3" json:"format,omitempty"`                         // 导出格式（"CSV"|"JSON"|"BINARY"）
	ChunkSize     uint32                 `protobuf:"varint,2,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"` // 分块大小（字节）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogExportRequest) Reset() {
	*x = LogExportRequest{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogExportRequest) ProtoMessage() {}

func (x *LogExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogExportRequest.ProtoReflect.Descriptor instead.
func (*LogExportRequest) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{2}
}

func (x *LogExportRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *LogExportRequest) GetChunkSize() uint32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

type LogChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          []byte                 `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Sequence      uint32                 `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Checksum      string                 `protobuf:"bytes,3,opt,name=checksum,proto3" json:"checksum,omitempty"` // SHA-256校验
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogChunk) Reset() {
	*x = LogChunk{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogChunk) ProtoMessage() {}

func (x *LogChunk) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogChunk.ProtoReflect.Descriptor instead.
func (*LogChunk) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{3}
}

func (x *LogChunk) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *LogChunk) GetSequence() uint32 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *LogChunk) GetChecksum() string {
	if x != nil {
		return x.Checksum
	}
	return ""
}

// ------------------ 配置管理相关 ------------------
type ConfigChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       []byte                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	TotalChunks   uint32                 `protobuf:"varint,2,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"`
	CurrentChunk  uint32                 `protobuf:"varint,3,opt,name=current_chunk,json=currentChunk,proto3" json:"current_chunk,omitempty"`
	ConfigHash    string                 `protobuf:"bytes,4,opt,name=config_hash,json=configHash,proto3" json:"config_hash,omitempty"` // 整体配置的哈希
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConfigChunk) Reset() {
	*x = ConfigChunk{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigChunk) ProtoMessage() {}

func (x *ConfigChunk) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigChunk.ProtoReflect.Descriptor instead.
func (*ConfigChunk) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{4}
}

func (x *ConfigChunk) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *ConfigChunk) GetTotalChunks() uint32 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

func (x *ConfigChunk) GetCurrentChunk() uint32 {
	if x != nil {
		return x.CurrentChunk
	}
	return 0
}

func (x *ConfigChunk) GetConfigHash() string {
	if x != nil {
		return x.ConfigHash
	}
	return ""
}

type ImportStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	State         ImportStatus_State     `protobuf:"varint,1,opt,name=state,proto3,enum=plcide.ImportStatus_State" json:"state,omitempty"`
	Progress      float32                `protobuf:"fixed32,2,opt,name=progress,proto3" json:"progress,omitempty"` // 进度百分比
	ErrorDetail   *string                `protobuf:"bytes,3,opt,name=error_detail,json=errorDetail,proto3,oneof" json:"error_detail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ImportStatus) Reset() {
	*x = ImportStatus{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImportStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImportStatus) ProtoMessage() {}

func (x *ImportStatus) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImportStatus.ProtoReflect.Descriptor instead.
func (*ImportStatus) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{5}
}

func (x *ImportStatus) GetState() ImportStatus_State {
	if x != nil {
		return x.State
	}
	return ImportStatus_RECEIVING
}

func (x *ImportStatus) GetProgress() float32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *ImportStatus) GetErrorDetail() string {
	if x != nil && x.ErrorDetail != nil {
		return *x.ErrorDetail
	}
	return ""
}

type ExportRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VersionId     string                 `protobuf:"bytes,1,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`              // 指定导出版本
	IncludeAssets bool                   `protobuf:"varint,2,opt,name=include_assets,json=includeAssets,proto3" json:"include_assets,omitempty"` // 是否包含资源文件
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExportRequest) Reset() {
	*x = ExportRequest{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExportRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExportRequest) ProtoMessage() {}

func (x *ExportRequest) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExportRequest.ProtoReflect.Descriptor instead.
func (*ExportRequest) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{6}
}

func (x *ExportRequest) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *ExportRequest) GetIncludeAssets() bool {
	if x != nil {
		return x.IncludeAssets
	}
	return false
}

type VersionQuery struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`       // 必需：要查询的项目ID
	PageSize      *uint32                `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3,oneof" json:"page_size,omitempty"`   // 可选：每页返回的版本数量
	PageToken     *string                `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3,oneof" json:"page_token,omitempty"` // 可选：分页令牌（从上一页响应中获取）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VersionQuery) Reset() {
	*x = VersionQuery{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VersionQuery) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VersionQuery) ProtoMessage() {}

func (x *VersionQuery) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VersionQuery.ProtoReflect.Descriptor instead.
func (*VersionQuery) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{7}
}

func (x *VersionQuery) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *VersionQuery) GetPageSize() uint32 {
	if x != nil && x.PageSize != nil {
		return *x.PageSize
	}
	return 0
}

func (x *VersionQuery) GetPageToken() string {
	if x != nil && x.PageToken != nil {
		return *x.PageToken
	}
	return ""
}

type ProjectVersions struct {
	state         protoimpl.MessageState         `protogen:"open.v1"`
	Versions      []*ProjectVersions_VersionInfo `protobuf:"bytes,1,rep,name=versions,proto3" json:"versions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectVersions) Reset() {
	*x = ProjectVersions{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectVersions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectVersions) ProtoMessage() {}

func (x *ProjectVersions) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectVersions.ProtoReflect.Descriptor instead.
func (*ProjectVersions) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{8}
}

func (x *ProjectVersions) GetVersions() []*ProjectVersions_VersionInfo {
	if x != nil {
		return x.Versions
	}
	return nil
}

// ------------------ 项目管理相关 ------------------
type ProjectMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Tags          map[string]string      `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Dependencies  []string               `protobuf:"bytes,5,rep,name=dependencies,proto3" json:"dependencies,omitempty"` // 依赖的其他项目ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectMetadata) Reset() {
	*x = ProjectMetadata{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectMetadata) ProtoMessage() {}

func (x *ProjectMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectMetadata.ProtoReflect.Descriptor instead.
func (*ProjectMetadata) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{9}
}

func (x *ProjectMetadata) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectMetadata) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectMetadata) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ProjectMetadata) GetTags() map[string]string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *ProjectMetadata) GetDependencies() []string {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

type ProjectCreationResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ProjectId      string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	CreatedAt      *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	InitialVersion string                 `protobuf:"bytes,3,opt,name=initial_version,json=initialVersion,proto3" json:"initial_version,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *ProjectCreationResponse) Reset() {
	*x = ProjectCreationResponse{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectCreationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectCreationResponse) ProtoMessage() {}

func (x *ProjectCreationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectCreationResponse.ProtoReflect.Descriptor instead.
func (*ProjectCreationResponse) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{10}
}

func (x *ProjectCreationResponse) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectCreationResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ProjectCreationResponse) GetInitialVersion() string {
	if x != nil {
		return x.InitialVersion
	}
	return ""
}

type ProjectIdentifier struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	ForceDelete   bool                   `protobuf:"varint,2,opt,name=force_delete,json=forceDelete,proto3" json:"force_delete,omitempty"` // 是否强制删除（忽略依赖检查）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectIdentifier) Reset() {
	*x = ProjectIdentifier{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectIdentifier) ProtoMessage() {}

func (x *ProjectIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectIdentifier.ProtoReflect.Descriptor instead.
func (*ProjectIdentifier) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{11}
}

func (x *ProjectIdentifier) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectIdentifier) GetForceDelete() bool {
	if x != nil {
		return x.ForceDelete
	}
	return false
}

type ProjectFilter struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NamePattern   string                 `protobuf:"bytes,1,opt,name=name_pattern,json=namePattern,proto3" json:"name_pattern,omitempty"` // 名称模糊匹配
	Tags          []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`                                  // 标签过滤
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectFilter) Reset() {
	*x = ProjectFilter{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectFilter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectFilter) ProtoMessage() {}

func (x *ProjectFilter) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectFilter.ProtoReflect.Descriptor instead.
func (*ProjectFilter) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{12}
}

func (x *ProjectFilter) GetNamePattern() string {
	if x != nil {
		return x.NamePattern
	}
	return ""
}

func (x *ProjectFilter) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type ProjectList struct {
	state         protoimpl.MessageState        `protogen:"open.v1"`
	Projects      []*ProjectList_ProjectSummary `protobuf:"bytes,1,rep,name=projects,proto3" json:"projects,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectList) Reset() {
	*x = ProjectList{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectList) ProtoMessage() {}

func (x *ProjectList) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectList.ProtoReflect.Descriptor instead.
func (*ProjectList) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{13}
}

func (x *ProjectList) GetProjects() []*ProjectList_ProjectSummary {
	if x != nil {
		return x.Projects
	}
	return nil
}

type OperationStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	ErrorCode     *string                `protobuf:"bytes,2,opt,name=error_code,json=errorCode,proto3,oneof" json:"error_code,omitempty"`
	OperationTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=operation_time,json=operationTime,proto3" json:"operation_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OperationStatus) Reset() {
	*x = OperationStatus{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OperationStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OperationStatus) ProtoMessage() {}

func (x *OperationStatus) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OperationStatus.ProtoReflect.Descriptor instead.
func (*OperationStatus) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{14}
}

func (x *OperationStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *OperationStatus) GetErrorCode() string {
	if x != nil && x.ErrorCode != nil {
		return *x.ErrorCode
	}
	return ""
}

func (x *OperationStatus) GetOperationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.OperationTime
	}
	return nil
}

type ProjectVersions_VersionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Author        string                 `protobuf:"bytes,3,opt,name=author,proto3" json:"author,omitempty"`
	Comment       string                 `protobuf:"bytes,4,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectVersions_VersionInfo) Reset() {
	*x = ProjectVersions_VersionInfo{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectVersions_VersionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectVersions_VersionInfo) ProtoMessage() {}

func (x *ProjectVersions_VersionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectVersions_VersionInfo.ProtoReflect.Descriptor instead.
func (*ProjectVersions_VersionInfo) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{8, 0}
}

func (x *ProjectVersions_VersionInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *ProjectVersions_VersionInfo) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ProjectVersions_VersionInfo) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *ProjectVersions_VersionInfo) GetComment() string {
	if x != nil {
		return x.Comment
	}
	return ""
}

type ProjectList_ProjectSummary struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ProjectId     string                 `protobuf:"bytes,1,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	LastModified  *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_modified,json=lastModified,proto3" json:"last_modified,omitempty"`
	VersionCount  uint32                 `protobuf:"varint,4,opt,name=version_count,json=versionCount,proto3" json:"version_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProjectList_ProjectSummary) Reset() {
	*x = ProjectList_ProjectSummary{}
	mi := &file_plc_ide_plc_ide_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProjectList_ProjectSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProjectList_ProjectSummary) ProtoMessage() {}

func (x *ProjectList_ProjectSummary) ProtoReflect() protoreflect.Message {
	mi := &file_plc_ide_plc_ide_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProjectList_ProjectSummary.ProtoReflect.Descriptor instead.
func (*ProjectList_ProjectSummary) Descriptor() ([]byte, []int) {
	return file_plc_ide_plc_ide_proto_rawDescGZIP(), []int{13, 0}
}

func (x *ProjectList_ProjectSummary) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ProjectList_ProjectSummary) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProjectList_ProjectSummary) GetLastModified() *timestamppb.Timestamp {
	if x != nil {
		return x.LastModified
	}
	return nil
}

func (x *ProjectList_ProjectSummary) GetVersionCount() uint32 {
	if x != nil {
		return x.VersionCount
	}
	return 0
}

var File_plc_ide_plc_ide_proto protoreflect.FileDescriptor

const file_plc_ide_plc_ide_proto_rawDesc = "" +
	"\n" +
	"\x15plc_ide/plc_ide.proto\x12\x06plcide\x1a\x1fgoogle/protobuf/timestamp.proto\"\xb4\x02\n" +
	"\x0fLogSubscription\x129\n" +
	"\n" +
	"start_time\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x125\n" +
	"\bend_time\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\aendTime\x12C\n" +
	"\flevel_filter\x18\x03 \x01(\x0e2 .plcide.LogSubscription.LogLevelR\vlevelFilter\x12#\n" +
	"\rsource_filter\x18\x04 \x01(\tR\fsourceFilter\"E\n" +
	"\bLogLevel\x12\t\n" +
	"\x05DEBUG\x10\x00\x12\b\n" +
	"\x04INFO\x10\x01\x12\v\n" +
	"\aWARNING\x10\x02\x12\t\n" +
	"\x05ERROR\x10\x03\x12\f\n" +
	"\bCRITICAL\x10\x04\"\xa3\x02\n" +
	"\bLogEntry\x128\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x126\n" +
	"\x05level\x18\x02 \x01(\x0e2 .plcide.LogSubscription.LogLevelR\x05level\x12\x16\n" +
	"\x06source\x18\x03 \x01(\tR\x06source\x12\x18\n" +
	"\amessage\x18\x04 \x01(\tR\amessage\x127\n" +
	"\acontext\x18\x05 \x03(\v2\x1d.plcide.LogEntry.ContextEntryR\acontext\x1a:\n" +
	"\fContextEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"I\n" +
	"\x10LogExportRequest\x12\x16\n" +
	"\x06format\x18\x01 \x01(\tR\x06format\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x02 \x01(\rR\tchunkSize\"V\n" +
	"\bLogChunk\x12\x12\n" +
	"\x04data\x18\x01 \x01(\fR\x04data\x12\x1a\n" +
	"\bsequence\x18\x02 \x01(\rR\bsequence\x12\x1a\n" +
	"\bchecksum\x18\x03 \x01(\tR\bchecksum\"\x90\x01\n" +
	"\vConfigChunk\x12\x18\n" +
	"\acontent\x18\x01 \x01(\fR\acontent\x12!\n" +
	"\ftotal_chunks\x18\x02 \x01(\rR\vtotalChunks\x12#\n" +
	"\rcurrent_chunk\x18\x03 \x01(\rR\fcurrentChunk\x12\x1f\n" +
	"\vconfig_hash\x18\x04 \x01(\tR\n" +
	"configHash\"\xd6\x01\n" +
	"\fImportStatus\x120\n" +
	"\x05state\x18\x01 \x01(\x0e2\x1a.plcide.ImportStatus.StateR\x05state\x12\x1a\n" +
	"\bprogress\x18\x02 \x01(\x02R\bprogress\x12&\n" +
	"\ferror_detail\x18\x03 \x01(\tH\x00R\verrorDetail\x88\x01\x01\"?\n" +
	"\x05State\x12\r\n" +
	"\tRECEIVING\x10\x00\x12\x0e\n" +
	"\n" +
	"VALIDATING\x10\x01\x12\v\n" +
	"\aAPPLIED\x10\x02\x12\n" +
	"\n" +
	"\x06FAILED\x10\x03B\x0f\n" +
	"\r_error_detail\"U\n" +
	"\rExportRequest\x12\x1d\n" +
	"\n" +
	"version_id\x18\x01 \x01(\tR\tversionId\x12%\n" +
	"\x0einclude_assets\x18\x02 \x01(\bR\rincludeAssets\"\x90\x01\n" +
	"\fVersionQuery\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12 \n" +
	"\tpage_size\x18\x02 \x01(\rH\x00R\bpageSize\x88\x01\x01\x12\"\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tH\x01R\tpageToken\x88\x01\x01B\f\n" +
	"\n" +
	"_page_sizeB\r\n" +
	"\v_page_token\"\xdf\x01\n" +
	"\x0fProjectVersions\x12?\n" +
	"\bversions\x18\x01 \x03(\v2#.plcide.ProjectVersions.VersionInfoR\bversions\x1a\x8a\x01\n" +
	"\vVersionInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12\x16\n" +
	"\x06author\x18\x03 \x01(\tR\x06author\x12\x18\n" +
	"\acomment\x18\x04 \x01(\tR\acomment\"\xfa\x01\n" +
	"\x0fProjectMetadata\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x125\n" +
	"\x04tags\x18\x04 \x03(\v2!.plcide.ProjectMetadata.TagsEntryR\x04tags\x12\"\n" +
	"\fdependencies\x18\x05 \x03(\tR\fdependencies\x1a7\n" +
	"\tTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x9c\x01\n" +
	"\x17ProjectCreationResponse\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x129\n" +
	"\n" +
	"created_at\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x12'\n" +
	"\x0finitial_version\x18\x03 \x01(\tR\x0einitialVersion\"U\n" +
	"\x11ProjectIdentifier\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12!\n" +
	"\fforce_delete\x18\x02 \x01(\bR\vforceDelete\"F\n" +
	"\rProjectFilter\x12!\n" +
	"\fname_pattern\x18\x01 \x01(\tR\vnamePattern\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\"\xf9\x01\n" +
	"\vProjectList\x12>\n" +
	"\bprojects\x18\x01 \x03(\v2\".plcide.ProjectList.ProjectSummaryR\bprojects\x1a\xa9\x01\n" +
	"\x0eProjectSummary\x12\x1d\n" +
	"\n" +
	"project_id\x18\x01 \x01(\tR\tprojectId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12?\n" +
	"\rlast_modified\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\flastModified\x12#\n" +
	"\rversion_count\x18\x04 \x01(\rR\fversionCount\"\xa1\x01\n" +
	"\x0fOperationStatus\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\"\n" +
	"\n" +
	"error_code\x18\x02 \x01(\tH\x00R\terrorCode\x88\x01\x01\x12A\n" +
	"\x0eoperation_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\roperationTimeB\r\n" +
	"\v_error_code2\xa5\x04\n" +
	"\x11PLCRuntimeService\x129\n" +
	"\n" +
	"StreamLogs\x12\x17.plcide.LogSubscription\x1a\x10.plcide.LogEntry0\x01\x12:\n" +
	"\n" +
	"ExportLogs\x12\x18.plcide.LogExportRequest\x1a\x10.plcide.LogChunk0\x01\x12B\n" +
	"\x13ImportProjectConfig\x12\x13.plcide.ConfigChunk\x1a\x14.plcide.ImportStatus(\x01\x12C\n" +
	"\x13ExportProjectConfig\x12\x15.plcide.ExportRequest\x1a\x13.plcide.ConfigChunk0\x01\x12D\n" +
	"\x13ListProjectVersions\x12\x14.plcide.VersionQuery\x1a\x17.plcide.ProjectVersions\x12I\n" +
	"\rCreateProject\x12\x17.plcide.ProjectMetadata\x1a\x1f.plcide.ProjectCreationResponse\x12C\n" +
	"\rDeleteProject\x12\x19.plcide.ProjectIdentifier\x1a\x17.plcide.OperationStatus\x12:\n" +
	"\fListProjects\x12\x15.plcide.ProjectFilter\x1a\x13.plcide.ProjectListB,Z*github.com/nihilKnight/grpc-section/plcideb\x06proto3"

var (
	file_plc_ide_plc_ide_proto_rawDescOnce sync.Once
	file_plc_ide_plc_ide_proto_rawDescData []byte
)

func file_plc_ide_plc_ide_proto_rawDescGZIP() []byte {
	file_plc_ide_plc_ide_proto_rawDescOnce.Do(func() {
		file_plc_ide_plc_ide_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_plc_ide_plc_ide_proto_rawDesc), len(file_plc_ide_plc_ide_proto_rawDesc)))
	})
	return file_plc_ide_plc_ide_proto_rawDescData
}

var file_plc_ide_plc_ide_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_plc_ide_plc_ide_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_plc_ide_plc_ide_proto_goTypes = []any{
	(LogSubscription_LogLevel)(0),       // 0: plcide.LogSubscription.LogLevel
	(ImportStatus_State)(0),             // 1: plcide.ImportStatus.State
	(*LogSubscription)(nil),             // 2: plcide.LogSubscription
	(*LogEntry)(nil),                    // 3: plcide.LogEntry
	(*LogExportRequest)(nil),            // 4: plcide.LogExportRequest
	(*LogChunk)(nil),                    // 5: plcide.LogChunk
	(*ConfigChunk)(nil),                 // 6: plcide.ConfigChunk
	(*ImportStatus)(nil),                // 7: plcide.ImportStatus
	(*ExportRequest)(nil),               // 8: plcide.ExportRequest
	(*VersionQuery)(nil),                // 9: plcide.VersionQuery
	(*ProjectVersions)(nil),             // 10: plcide.ProjectVersions
	(*ProjectMetadata)(nil),             // 11: plcide.ProjectMetadata
	(*ProjectCreationResponse)(nil),     // 12: plcide.ProjectCreationResponse
	(*ProjectIdentifier)(nil),           // 13: plcide.ProjectIdentifier
	(*ProjectFilter)(nil),               // 14: plcide.ProjectFilter
	(*ProjectList)(nil),                 // 15: plcide.ProjectList
	(*OperationStatus)(nil),             // 16: plcide.OperationStatus
	nil,                                 // 17: plcide.LogEntry.ContextEntry
	(*ProjectVersions_VersionInfo)(nil), // 18: plcide.ProjectVersions.VersionInfo
	nil,                                 // 19: plcide.ProjectMetadata.TagsEntry
	(*ProjectList_ProjectSummary)(nil),  // 20: plcide.ProjectList.ProjectSummary
	(*timestamppb.Timestamp)(nil),       // 21: google.protobuf.Timestamp
}
var file_plc_ide_plc_ide_proto_depIdxs = []int32{
	21, // 0: plcide.LogSubscription.start_time:type_name -> google.protobuf.Timestamp
	21, // 1: plcide.LogSubscription.end_time:type_name -> google.protobuf.Timestamp
	0,  // 2: plcide.LogSubscription.level_filter:type_name -> plcide.LogSubscription.LogLevel
	21, // 3: plcide.LogEntry.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 4: plcide.LogEntry.level:type_name -> plcide.LogSubscription.LogLevel
	17, // 5: plcide.LogEntry.context:type_name -> plcide.LogEntry.ContextEntry
	1,  // 6: plcide.ImportStatus.state:type_name -> plcide.ImportStatus.State
	18, // 7: plcide.ProjectVersions.versions:type_name -> plcide.ProjectVersions.VersionInfo
	19, // 8: plcide.ProjectMetadata.tags:type_name -> plcide.ProjectMetadata.TagsEntry
	21, // 9: plcide.ProjectCreationResponse.created_at:type_name -> google.protobuf.Timestamp
	20, // 10: plcide.ProjectList.projects:type_name -> plcide.ProjectList.ProjectSummary
	21, // 11: plcide.OperationStatus.operation_time:type_name -> google.protobuf.Timestamp
	21, // 12: plcide.ProjectVersions.VersionInfo.created_at:type_name -> google.protobuf.Timestamp
	21, // 13: plcide.ProjectList.ProjectSummary.last_modified:type_name -> google.protobuf.Timestamp
	2,  // 14: plcide.PLCRuntimeService.StreamLogs:input_type -> plcide.LogSubscription
	4,  // 15: plcide.PLCRuntimeService.ExportLogs:input_type -> plcide.LogExportRequest
	6,  // 16: plcide.PLCRuntimeService.ImportProjectConfig:input_type -> plcide.ConfigChunk
	8,  // 17: plcide.PLCRuntimeService.ExportProjectConfig:input_type -> plcide.ExportRequest
	9,  // 18: plcide.PLCRuntimeService.ListProjectVersions:input_type -> plcide.VersionQuery
	11, // 19: plcide.PLCRuntimeService.CreateProject:input_type -> plcide.ProjectMetadata
	13, // 20: plcide.PLCRuntimeService.DeleteProject:input_type -> plcide.ProjectIdentifier
	14, // 21: plcide.PLCRuntimeService.ListProjects:input_type -> plcide.ProjectFilter
	3,  // 22: plcide.PLCRuntimeService.StreamLogs:output_type -> plcide.LogEntry
	5,  // 23: plcide.PLCRuntimeService.ExportLogs:output_type -> plcide.LogChunk
	7,  // 24: plcide.PLCRuntimeService.ImportProjectConfig:output_type -> plcide.ImportStatus
	6,  // 25: plcide.PLCRuntimeService.ExportProjectConfig:output_type -> plcide.ConfigChunk
	10, // 26: plcide.PLCRuntimeService.ListProjectVersions:output_type -> plcide.ProjectVersions
	12, // 27: plcide.PLCRuntimeService.CreateProject:output_type -> plcide.ProjectCreationResponse
	16, // 28: plcide.PLCRuntimeService.DeleteProject:output_type -> plcide.OperationStatus
	15, // 29: plcide.PLCRuntimeService.ListProjects:output_type -> plcide.ProjectList
	22, // [22:30] is the sub-list for method output_type
	14, // [14:22] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_plc_ide_plc_ide_proto_init() }
func file_plc_ide_plc_ide_proto_init() {
	if File_plc_ide_plc_ide_proto != nil {
		return
	}
	file_plc_ide_plc_ide_proto_msgTypes[5].OneofWrappers = []any{}
	file_plc_ide_plc_ide_proto_msgTypes[7].OneofWrappers = []any{}
	file_plc_ide_plc_ide_proto_msgTypes[14].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_plc_ide_plc_ide_proto_rawDesc), len(file_plc_ide_plc_ide_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_plc_ide_plc_ide_proto_goTypes,
		DependencyIndexes: file_plc_ide_plc_ide_proto_depIdxs,
		EnumInfos:         file_plc_ide_plc_ide_proto_enumTypes,
		MessageInfos:      file_plc_ide_plc_ide_proto_msgTypes,
	}.Build()
	File_plc_ide_plc_ide_proto = out.File
	file_plc_ide_plc_ide_proto_goTypes = nil
	file_plc_ide_plc_ide_proto_depIdxs = nil
}
