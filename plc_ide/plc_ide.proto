syntax = "proto3";

option go_package = "github.com/nihilKnight/grpc-section/plcide";

package plcide;

import "google/protobuf/timestamp.proto";

// ================== 核心服务定义 ==================
service PLCRuntimeService {
  
  // 日志管理
  rpc StreamLogs(LogSubscription) returns (stream LogEntry);
  rpc ExportLogs(LogExportRequest) returns (stream LogChunk);

  // 配置管理
  rpc ImportProjectConfig(stream ConfigChunk) returns (ImportStatus);
  rpc ExportProjectConfig(ExportRequest) returns (stream ConfigChunk);
  rpc ListProjectVersions(VersionQuery) returns (ProjectVersions);

  // 项目管理
  rpc CreateProject(ProjectMetadata) returns (ProjectCreationResponse);
  rpc DeleteProject(ProjectIdentifier) returns (OperationStatus);
  rpc ListProjects(ProjectFilter) returns (ProjectList);
}

// ================== 数据结构定义 ==================

// ------------------ 日志管理相关 ------------------
message LogSubscription {
  google.protobuf.Timestamp start_time = 1;
  google.protobuf.Timestamp end_time = 2;
  LogLevel level_filter = 3;  // 日志级别过滤
  string source_filter = 4;   // 来源模块过滤（如 "PLC.Runtime"）

  enum LogLevel {
    DEBUG = 0;
    INFO = 1;
    WARNING = 2;
    ERROR = 3;
    CRITICAL = 4;
  }
}

message LogEntry {
  google.protobuf.Timestamp timestamp = 1;
  LogSubscription.LogLevel level = 2;
  string source = 3;
  string message = 4;
  map<string, string> context = 5;  // 扩展上下文（如设备ID、任务名）
}

message LogExportRequest {
  string format = 1;  // 导出格式（"CSV"|"JSON"|"BINARY"）
  uint32 chunk_size = 2;  // 分块大小（字节）
}

message LogChunk {
  bytes data = 1;
  uint32 sequence = 2;
  string checksum = 3;  // SHA-256校验
}

// ------------------ 配置管理相关 ------------------
message ConfigChunk {
  bytes content = 1;
  uint32 total_chunks = 2;
  uint32 current_chunk = 3;
  string config_hash = 4;  // 整体配置的哈希
}

message ImportStatus {
  enum State {
    RECEIVING = 0;
    VALIDATING = 1;
    APPLIED = 2;
    FAILED = 3;
  }
  State state = 1;
  float progress = 2;  // 进度百分比
  optional string error_detail = 3;
}

message ExportRequest {
  string version_id = 1;  // 指定导出版本
  bool include_assets = 2;  // 是否包含资源文件
}

message VersionQuery {
  string project_id = 1;           // 必需：要查询的项目ID
  optional uint32 page_size = 2;   // 可选：每页返回的版本数量
  optional string page_token = 3;  // 可选：分页令牌（从上一页响应中获取）
}

message ProjectVersions {
  message VersionInfo {
    string id = 1;
    google.protobuf.Timestamp created_at = 2;
    string author = 3;
    string comment = 4;
  }
  repeated VersionInfo versions = 1;
}

// ------------------ 项目管理相关 ------------------
message ProjectMetadata {
  string project_id = 1;
  string name = 2;
  string description = 3;
  map<string, string> tags = 4;
  repeated string dependencies = 5;  // 依赖的其他项目ID
}

message ProjectCreationResponse {
  string project_id = 1;
  google.protobuf.Timestamp created_at = 2;
  string initial_version = 3;
}

message ProjectIdentifier {
  string project_id = 1;
  bool force_delete = 2;  // 是否强制删除（忽略依赖检查）
}

message ProjectFilter {
  string name_pattern = 1;  // 名称模糊匹配
  repeated string tags = 2;  // 标签过滤
}

message ProjectList {
  message ProjectSummary {
    string project_id = 1;
    string name = 2;
    google.protobuf.Timestamp last_modified = 3;
    uint32 version_count = 4;
  }
  repeated ProjectSummary projects = 1;
}

message OperationStatus {
  bool success = 1;
  optional string error_code = 2;
  google.protobuf.Timestamp operation_time = 3;
}