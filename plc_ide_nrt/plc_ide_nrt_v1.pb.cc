// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: plc_ide_nrt_v1.proto
// Protobuf C++ Version: 5.29.0

#include "plc_ide_nrt_v1.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace plcide {

inline constexpr LogExportRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : format_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        chunk_size_{0u},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR LogExportRequest::LogExportRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LogExportRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogExportRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogExportRequestDefaultTypeInternal() {}
  union {
    LogExportRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogExportRequestDefaultTypeInternal _LogExportRequest_default_instance_;

inline constexpr LogEntry::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        component_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        message_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_{nullptr},
        level_{static_cast< ::plcide::LogEntry_LogLevel >(0)} {}

template <typename>
PROTOBUF_CONSTEXPR LogEntry::LogEntry(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LogEntryDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LogEntryDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LogEntryDefaultTypeInternal() {}
  union {
    LogEntry _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LogEntryDefaultTypeInternal _LogEntry_default_instance_;
}  // namespace plcide
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_plc_5fide_5fnrt_5fv1_2eproto[1];
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_plc_5fide_5fnrt_5fv1_2eproto = nullptr;
const ::uint32_t
    TableStruct_plc_5fide_5fnrt_5fv1_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        PROTOBUF_FIELD_OFFSET(::plcide::LogEntry, _impl_._has_bits_),
        PROTOBUF_FIELD_OFFSET(::plcide::LogEntry, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::plcide::LogEntry, _impl_.timestamp_),
        PROTOBUF_FIELD_OFFSET(::plcide::LogEntry, _impl_.level_),
        PROTOBUF_FIELD_OFFSET(::plcide::LogEntry, _impl_.component_),
        PROTOBUF_FIELD_OFFSET(::plcide::LogEntry, _impl_.message_),
        0,
        ~0u,
        ~0u,
        ~0u,
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::plcide::LogExportRequest, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::plcide::LogExportRequest, _impl_.format_),
        PROTOBUF_FIELD_OFFSET(::plcide::LogExportRequest, _impl_.chunk_size_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 12, -1, sizeof(::plcide::LogEntry)},
        {16, -1, -1, sizeof(::plcide::LogExportRequest)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::plcide::_LogEntry_default_instance_._instance,
    &::plcide::_LogExportRequest_default_instance_._instance,
};
const char descriptor_table_protodef_plc_5fide_5fnrt_5fv1_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\024plc_ide_nrt_v1.proto\022\006plcide\032\037google/p"
    "rotobuf/timestamp.proto\"\315\001\n\010LogEntry\022-\n\t"
    "timestamp\030\001 \001(\0132\032.google.protobuf.Timest"
    "amp\022(\n\005level\030\002 \001(\0162\031.plcide.LogEntry.Log"
    "Level\022\021\n\tcomponent\030\003 \001(\t\022\017\n\007message\030\004 \001("
    "\t\"D\n\010LogLevel\022\t\n\005DEBUG\020\000\022\010\n\004INFO\020\001\022\013\n\007WA"
    "RNING\020\002\022\t\n\005ERROR\020\003\022\013\n\007UNKNOWN\020\004\"6\n\020LogEx"
    "portRequest\022\016\n\006format\030\001 \001(\t\022\022\n\nchunk_siz"
    "e\030\002 \001(\r2O\n\021PLCRuntimeService\022:\n\nExportLo"
    "gs\022\030.plcide.LogExportRequest\032\020.plcide.Lo"
    "gEntry0\001B2Z0github.com/nihilKnight/grpc-"
    "section/plcidenrt-v1b\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_plc_5fide_5fnrt_5fv1_2eproto_deps[1] =
    {
        &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::absl::once_flag descriptor_table_plc_5fide_5fnrt_5fv1_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_plc_5fide_5fnrt_5fv1_2eproto = {
    false,
    false,
    468,
    descriptor_table_protodef_plc_5fide_5fnrt_5fv1_2eproto,
    "plc_ide_nrt_v1.proto",
    &descriptor_table_plc_5fide_5fnrt_5fv1_2eproto_once,
    descriptor_table_plc_5fide_5fnrt_5fv1_2eproto_deps,
    1,
    2,
    schemas,
    file_default_instances,
    TableStruct_plc_5fide_5fnrt_5fv1_2eproto::offsets,
    file_level_enum_descriptors_plc_5fide_5fnrt_5fv1_2eproto,
    file_level_service_descriptors_plc_5fide_5fnrt_5fv1_2eproto,
};
namespace plcide {
const ::google::protobuf::EnumDescriptor* LogEntry_LogLevel_descriptor() {
  ::google::protobuf::internal::AssignDescriptors(&descriptor_table_plc_5fide_5fnrt_5fv1_2eproto);
  return file_level_enum_descriptors_plc_5fide_5fnrt_5fv1_2eproto[0];
}
PROTOBUF_CONSTINIT const uint32_t LogEntry_LogLevel_internal_data_[] = {
    327680u, 0u, };
bool LogEntry_LogLevel_IsValid(int value) {
  return 0 <= value && value <= 4;
}
#if (__cplusplus < 201703) && \
  (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))

constexpr LogEntry_LogLevel LogEntry::DEBUG;
constexpr LogEntry_LogLevel LogEntry::INFO;
constexpr LogEntry_LogLevel LogEntry::WARNING;
constexpr LogEntry_LogLevel LogEntry::ERROR;
constexpr LogEntry_LogLevel LogEntry::UNKNOWN;
constexpr LogEntry_LogLevel LogEntry::LogLevel_MIN;
constexpr LogEntry_LogLevel LogEntry::LogLevel_MAX;
constexpr int LogEntry::LogLevel_ARRAYSIZE;

#endif  // (__cplusplus < 201703) &&
        // (!defined(_MSC_VER) || (_MSC_VER >= 1900 && _MSC_VER < 1912))
// ===================================================================

class LogEntry::_Internal {
 public:
  using HasBits =
      decltype(std::declval<LogEntry>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LogEntry, _impl_._has_bits_);
};

void LogEntry::clear_timestamp() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (_impl_.timestamp_ != nullptr) _impl_.timestamp_->Clear();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
LogEntry::LogEntry(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:plcide.LogEntry)
}
inline PROTOBUF_NDEBUG_INLINE LogEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::plcide::LogEntry& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        component_(arena, from.component_),
        message_(arena, from.message_) {}

LogEntry::LogEntry(
    ::google::protobuf::Arena* arena,
    const LogEntry& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LogEntry* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::uint32_t cached_has_bits = _impl_._has_bits_[0];
  _impl_.timestamp_ = (cached_has_bits & 0x00000001u) ? ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(
                              arena, *from._impl_.timestamp_)
                        : nullptr;
  _impl_.level_ = from._impl_.level_;

  // @@protoc_insertion_point(copy_constructor:plcide.LogEntry)
}
inline PROTOBUF_NDEBUG_INLINE LogEntry::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : _cached_size_{0},
        component_(arena),
        message_(arena) {}

inline void LogEntry::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, timestamp_),
           0,
           offsetof(Impl_, level_) -
               offsetof(Impl_, timestamp_) +
               sizeof(Impl_::level_));
}
LogEntry::~LogEntry() {
  // @@protoc_insertion_point(destructor:plcide.LogEntry)
  SharedDtor(*this);
}
inline void LogEntry::SharedDtor(MessageLite& self) {
  LogEntry& this_ = static_cast<LogEntry&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.component_.Destroy();
  this_._impl_.message_.Destroy();
  delete this_._impl_.timestamp_;
  this_._impl_.~Impl_();
}

inline void* LogEntry::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LogEntry(arena);
}
constexpr auto LogEntry::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LogEntry),
                                            alignof(LogEntry));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LogEntry::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LogEntry_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LogEntry::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LogEntry>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LogEntry::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LogEntry>(), &LogEntry::ByteSizeLong,
            &LogEntry::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LogEntry, _impl_._cached_size_),
        false,
    },
    &LogEntry::kDescriptorMethods,
    &descriptor_table_plc_5fide_5fnrt_5fv1_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LogEntry::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 1, 40, 2> LogEntry::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LogEntry, _impl_._has_bits_),
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::plcide::LogEntry>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string message = 4;
    {::_pbi::TcParser::FastUS1,
     {34, 63, 0, PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.message_)}},
    // .google.protobuf.Timestamp timestamp = 1;
    {::_pbi::TcParser::FastMtS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.timestamp_)}},
    // .plcide.LogEntry.LogLevel level = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LogEntry, _impl_.level_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.level_)}},
    // string component = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.component_)}},
  }}, {{
    65535, 65535
  }}, {{
    // .google.protobuf.Timestamp timestamp = 1;
    {PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.timestamp_), _Internal::kHasBitsOffset + 0, 0,
    (0 | ::_fl::kFcOptional | ::_fl::kMessage | ::_fl::kTvTable)},
    // .plcide.LogEntry.LogLevel level = 2;
    {PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.level_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kOpenEnum)},
    // string component = 3;
    {PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.component_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string message = 4;
    {PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.message_), -1, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }}, {{
    {::_pbi::TcParser::GetTable<::google::protobuf::Timestamp>()},
  }}, {{
    "\17\0\0\11\7\0\0\0"
    "plcide.LogEntry"
    "component"
    "message"
  }},
};

PROTOBUF_NOINLINE void LogEntry::Clear() {
// @@protoc_insertion_point(message_clear_start:plcide.LogEntry)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.component_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  cached_has_bits = _impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(_impl_.timestamp_ != nullptr);
    _impl_.timestamp_->Clear();
  }
  _impl_.level_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LogEntry::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LogEntry& this_ = static_cast<const LogEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LogEntry::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LogEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:plcide.LogEntry)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          cached_has_bits = this_._impl_._has_bits_[0];
          // .google.protobuf.Timestamp timestamp = 1;
          if (cached_has_bits & 0x00000001u) {
            target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                1, *this_._impl_.timestamp_, this_._impl_.timestamp_->GetCachedSize(), target,
                stream);
          }

          // .plcide.LogEntry.LogLevel level = 2;
          if (this_._internal_level() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteEnumToArray(
                2, this_._internal_level(), target);
          }

          // string component = 3;
          if (!this_._internal_component().empty()) {
            const std::string& _s = this_._internal_component();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "plcide.LogEntry.component");
            target = stream->WriteStringMaybeAliased(3, _s, target);
          }

          // string message = 4;
          if (!this_._internal_message().empty()) {
            const std::string& _s = this_._internal_message();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "plcide.LogEntry.message");
            target = stream->WriteStringMaybeAliased(4, _s, target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:plcide.LogEntry)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LogEntry::ByteSizeLong(const MessageLite& base) {
          const LogEntry& this_ = static_cast<const LogEntry&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LogEntry::ByteSizeLong() const {
          const LogEntry& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:plcide.LogEntry)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string component = 3;
            if (!this_._internal_component().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_component());
            }
            // string message = 4;
            if (!this_._internal_message().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_message());
            }
          }
           {
            // .google.protobuf.Timestamp timestamp = 1;
            cached_has_bits = this_._impl_._has_bits_[0];
            if (cached_has_bits & 0x00000001u) {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.timestamp_);
            }
          }
           {
            // .plcide.LogEntry.LogLevel level = 2;
            if (this_._internal_level() != 0) {
              total_size += 1 +
                            ::_pbi::WireFormatLite::EnumSize(this_._internal_level());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LogEntry::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LogEntry*>(&to_msg);
  auto& from = static_cast<const LogEntry&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:plcide.LogEntry)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_component().empty()) {
    _this->_internal_set_component(from._internal_component());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  cached_has_bits = from._impl_._has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    ABSL_DCHECK(from._impl_.timestamp_ != nullptr);
    if (_this->_impl_.timestamp_ == nullptr) {
      _this->_impl_.timestamp_ =
          ::google::protobuf::Message::CopyConstruct<::google::protobuf::Timestamp>(arena, *from._impl_.timestamp_);
    } else {
      _this->_impl_.timestamp_->MergeFrom(*from._impl_.timestamp_);
    }
  }
  if (from._internal_level() != 0) {
    _this->_impl_.level_ = from._impl_.level_;
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogEntry::CopyFrom(const LogEntry& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plcide.LogEntry)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LogEntry::InternalSwap(LogEntry* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.component_, &other->_impl_.component_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_, &other->_impl_.message_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.level_)
      + sizeof(LogEntry::_impl_.level_)
      - PROTOBUF_FIELD_OFFSET(LogEntry, _impl_.timestamp_)>(
          reinterpret_cast<char*>(&_impl_.timestamp_),
          reinterpret_cast<char*>(&other->_impl_.timestamp_));
}

::google::protobuf::Metadata LogEntry::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LogExportRequest::_Internal {
 public:
};

LogExportRequest::LogExportRequest(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:plcide.LogExportRequest)
}
inline PROTOBUF_NDEBUG_INLINE LogExportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::plcide::LogExportRequest& from_msg)
      : format_(arena, from.format_),
        _cached_size_{0} {}

LogExportRequest::LogExportRequest(
    ::google::protobuf::Arena* arena,
    const LogExportRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LogExportRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.chunk_size_ = from._impl_.chunk_size_;

  // @@protoc_insertion_point(copy_constructor:plcide.LogExportRequest)
}
inline PROTOBUF_NDEBUG_INLINE LogExportRequest::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : format_(arena),
        _cached_size_{0} {}

inline void LogExportRequest::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.chunk_size_ = {};
}
LogExportRequest::~LogExportRequest() {
  // @@protoc_insertion_point(destructor:plcide.LogExportRequest)
  SharedDtor(*this);
}
inline void LogExportRequest::SharedDtor(MessageLite& self) {
  LogExportRequest& this_ = static_cast<LogExportRequest&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.format_.Destroy();
  this_._impl_.~Impl_();
}

inline void* LogExportRequest::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) LogExportRequest(arena);
}
constexpr auto LogExportRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LogExportRequest),
                                            alignof(LogExportRequest));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull LogExportRequest::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_LogExportRequest_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &LogExportRequest::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<LogExportRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &LogExportRequest::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<LogExportRequest>(), &LogExportRequest::ByteSizeLong,
            &LogExportRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(LogExportRequest, _impl_._cached_size_),
        false,
    },
    &LogExportRequest::kDescriptorMethods,
    &descriptor_table_plc_5fide_5fnrt_5fv1_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* LogExportRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 38, 2> LogExportRequest::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::plcide::LogExportRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // uint32 chunk_size = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(LogExportRequest, _impl_.chunk_size_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(LogExportRequest, _impl_.chunk_size_)}},
    // string format = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(LogExportRequest, _impl_.format_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string format = 1;
    {PROTOBUF_FIELD_OFFSET(LogExportRequest, _impl_.format_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // uint32 chunk_size = 2;
    {PROTOBUF_FIELD_OFFSET(LogExportRequest, _impl_.chunk_size_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUInt32)},
  }},
  // no aux_entries
  {{
    "\27\6\0\0\0\0\0\0"
    "plcide.LogExportRequest"
    "format"
  }},
};

PROTOBUF_NOINLINE void LogExportRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:plcide.LogExportRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.format_.ClearToEmpty();
  _impl_.chunk_size_ = 0u;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* LogExportRequest::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const LogExportRequest& this_ = static_cast<const LogExportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* LogExportRequest::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const LogExportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:plcide.LogExportRequest)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string format = 1;
          if (!this_._internal_format().empty()) {
            const std::string& _s = this_._internal_format();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "plcide.LogExportRequest.format");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // uint32 chunk_size = 2;
          if (this_._internal_chunk_size() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteUInt32ToArray(
                2, this_._internal_chunk_size(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:plcide.LogExportRequest)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t LogExportRequest::ByteSizeLong(const MessageLite& base) {
          const LogExportRequest& this_ = static_cast<const LogExportRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t LogExportRequest::ByteSizeLong() const {
          const LogExportRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:plcide.LogExportRequest)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string format = 1;
            if (!this_._internal_format().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_format());
            }
            // uint32 chunk_size = 2;
            if (this_._internal_chunk_size() != 0) {
              total_size += ::_pbi::WireFormatLite::UInt32SizePlusOne(
                  this_._internal_chunk_size());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void LogExportRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LogExportRequest*>(&to_msg);
  auto& from = static_cast<const LogExportRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:plcide.LogExportRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_format().empty()) {
    _this->_internal_set_format(from._internal_format());
  }
  if (from._internal_chunk_size() != 0) {
    _this->_impl_.chunk_size_ = from._impl_.chunk_size_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LogExportRequest::CopyFrom(const LogExportRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:plcide.LogExportRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LogExportRequest::InternalSwap(LogExportRequest* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.format_, &other->_impl_.format_, arena);
        swap(_impl_.chunk_size_, other->_impl_.chunk_size_);
}

::google::protobuf::Metadata LogExportRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace plcide
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_plc_5fide_5fnrt_5fv1_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
